

services:
  # ------------------------
  # 1. Database PostgreSQL
  # ------------------------
  db:
    image: postgres:14
    container_name: fashion_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin124
      POSTGRES_DB: fashiondb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ------------------------
  # 2. PGAdmin (DB GUI)
  # ------------------------
  pgadmin:
    image: dpage/pgadmin4
    container_name: fashion_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: abc@abc.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: always

  # ------------------------
  # 3. MinIO (Object Storage)
  # ------------------------
  minio:
    image: minio/minio
    container_name: fashion_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3-compatible API
      - "9001:9001"   # Web UI Console
    volumes:
      - ./minio/data:/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  # ------------------------
  # 4. Backend NestJS
  # ------------------------
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fashion_backend
    env_file:
      - ./.env
    ports:
      - "3008:3000"   # map host 3008 ke container 3000
      - "5555:5555"   # Prisma Studio
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

# ------------------------
# Named Volumes
# ------------------------
volumes:
  pgdata:
